#!/usr/local/bin/ruby
# frozen_string_literal: true

require 'bundler'
Bundler.setup

require 'pg'
require 'rake'
require 'active_record'

include ActiveRecord::Tasks

DatabaseTasks.root = File.expand_path('/home/app/web')
DatabaseTasks.db_dir = File.join DatabaseTasks.root, 'db'
DatabaseTasks.env = ENV.fetch 'ENV', ENV.fetch('RAILS_ENV', 'development')

exit begin
  connection_tries ||= 5
  ActiveRecord::Base.establish_connection
  ActiveRecord::Migration.check_pending!
  0
rescue PG::ConnectionBad
  unless (connection_tries -= 1).zero?
    puts "\033[0;31m:::: Retrying DB connection #{connection_tries} more times...\033[0m"
    sleep ENV.fetch('APP_SETUP_WAIT', '5').to_i
    retry
  end
  1

rescue ActiveRecord::PendingMigrationError
  puts "\033[0;33m:::: Migrations are pending, running latest migrations\033[0m"
  return 1 unless exec('bundle exec rails db:migrate')
  0
rescue ActiveRecord::NoDatabaseError
  puts "\033[0;31m:::: Database not found...\033[0m"
  return 1 unless DatabaseTasks.create_current
  type ||= :ruby
  type = :sql if File.exist?(File.join(DatabaseTasks.db_dir, 'structure.sql'))
  if DatabaseTasks.load_schema_current(type)
    puts "\033[0;32m:::: Schema loaded correctly...\033[0m"
  else
    puts "\033[0;31m:::: Schema could not be loaded...\033[0m"
  end
  retry
ensure
  ActiveRecord::Base.clear_all_connections!
end
